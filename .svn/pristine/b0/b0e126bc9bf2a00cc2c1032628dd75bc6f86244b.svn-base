package com.zfsoft.zf_new_email.modules.emaildetail;

import java.util.ArrayList;
import java.util.List;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.text.TextUtils;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.zfsoft.zf_new_email.R;
import com.zfsoft.zf_new_email.base.BaseActivity;
import com.zfsoft.zf_new_email.constant.Constant;
import com.zfsoft.zf_new_email.entity.Email;
import com.zfsoft.zf_new_email.entity.MailInfo;
import com.zfsoft.zf_new_email.util.SharedPreferencedUtis;

/**
 * @author wesley
 * @date 2016-10-19下午6:44:32
 * @Description: 邮件详情界面
 */
public class EmailDetailActivity extends BaseActivity implements OnClickListener {

	private int email_type; // 邮件类型
	private int type; // 类型
	private int type_in_oa; //oa mail
	private ArrayList<Email> list; // 所有邮件集合
	private int position; // 当前邮件的位置
	private Email email; // 邮件对象
	private String name; // 发信人
	private String emailAccount; // 邮箱账号
	private TextView tv_title; // 标题
	private TextView tv_account; // 账号
	private LinearLayout ll_back; // 返回
	private ImageView iv_star; // 星标
	private LinearLayout ll_star; // 星标的布局
	private ViewPager viewPager;
	private EmailDetailAdapter adapter; // 适配器

	@Override
	public int getLayoutId() {
		return R.layout.activity_detail;
	}

	@Override
	public void initVariables() {
		handleIntent();
		MailInfo mailInfo = SharedPreferencedUtis.getMailInfo(this);
		if (mailInfo != null) {
			emailAccount = mailInfo.getUserName();
		}
	}

	@Override
	public void initViews() {
		tv_title = (TextView) findViewById(R.id.include_head_title);
		tv_account = (TextView) findViewById(R.id.include_head_account);
		ll_back = (LinearLayout) findViewById(R.id.inclue_head_back_linear);
		iv_star = (ImageView) findViewById(R.id.incluce_head_home);
		ll_star = (LinearLayout) findViewById(R.id.include_head_home_linear);
		viewPager = (ViewPager) findViewById(R.id.detail_email_view_pager);

		tv_title.setText(name);
		tv_account.setVisibility(View.VISIBLE);
		tv_account.setText(emailAccount);
		viewPager.setAdapter(adapter);
		viewPager.setCurrentItem(position);
		ll_star.setVisibility(View.VISIBLE);

		// 点击事件
		ll_back.setOnClickListener(this);
		ll_star.setOnClickListener(this);
		viewPager.setOnPageChangeListener(new OnPageChanceViewPager());
	}

	@Override
	public void initPresenter() {

	}

	// 处理intent
	@SuppressWarnings("unchecked")
	private void handleIntent() {
		Intent intent = getIntent();
		if (intent != null) {
			Bundle bundle = intent.getExtras();
			if (bundle != null) {
				list = (ArrayList<Email>) bundle.getSerializable("list");
				position = bundle.getInt("position");
				type = bundle.getInt("type");
				email_type = bundle.getInt("email_type");
				type_in_oa = bundle.getInt("type_in_oa");
				if (list != null && list.size() > position) {
					email = list.get(position);
					name = email.getSenderName();
					if (TextUtils.isEmpty(name)) {
						name = email.getSendderAddress();
					}

					List<EmailDetailFragment> listFragment = new ArrayList<>();
					int size = list.size();
					for (int i = 0; i < size; i++) {
						EmailDetailFragment fragment = EmailDetailFragment.newInstance(list.get(i), list, type, email_type, type_in_oa);
						new EmailDetailPresenter(fragment);
						listFragment.add(fragment);
					}
					adapter = new EmailDetailAdapter(getSupportFragmentManager(), listFragment);
				}
			}
		}
	}

	@Override
	public void onClick(View view) {
		if (view == null) {
			return;
		}

		int key = view.getId();
		if (key == R.id.inclue_head_back_linear) {
			setResult(Constant.RESULT_CODE_DETAIL_BACK_LIST);
			finish();
		}
	}

	// viewpager滑动
	private class OnPageChanceViewPager implements OnPageChangeListener {

		@Override
		public void onPageScrollStateChanged(int arg0) {

		}

		@Override
		public void onPageScrolled(int arg0, float arg1, int arg2) {

		}

		@Override
		public void onPageSelected(int position) {
			String name = list.get(position).getSenderName();
			if (TextUtils.isEmpty(name)) {
				name = list.get(position).getSendderAddress();
			}
			tv_title.setText(name);
			viewPager.setCurrentItem(position);
		}
	}

	@Override
	public void onBackPressed() {
		setResult(Constant.RESULT_CODE_DETAIL_BACK_LIST);
		finish();
	}
}
